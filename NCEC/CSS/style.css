@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,700,500);


body {
	font-family: 'Roboto', sans-serif;
	font-size: 18px;
	text-align: center;
	line-height: 1.6;
	position: relative;
	/*background: url(../images/doodle.jpg) center;*/
	background-color: #ffffff;



}

header {
/* now insert the background image, not tiled and covers page */
	background-color: rgba(255,255,255,1);
	color: #777777;
	/*padding: 3% 10% 3% 15%;*/
/* add a fixed height above the vh mark for anybrowser that does not support vh i.e. ie8 */
	/*height: 300px;*/
/* set the height to the full height of the browser */
	height: 15vh;
/* viewport height = vh */
/* the computer only responds to the last written code for a command on the css/html/javascript page... e.g. different heights */

	width: 100%;
	/*display: inline;*/
	position: fixed;
	top: 0;
	left:0;

	z-index: 5;
/* we use steps of 10 to make it helpfuls to position other tags inbetween at a later date*/
/* add a shadow to the header --- adds depth */
	box-shadow: 0 0 15px rgba(0,0,0,0.3);

}

nav a {
	/*	*/
	font-size: 20px;
	font-weight: 400;
	text-decoration: none;
	text-transform: capitalize;	
	color: #777777;

	margin: 0 10px 0 10px;

}

header .right {

	position: absolute;
	right: 5%;
	top: 30%;
	display: block;	
	
}

header .left {

	position: absolute;
	left: 5%;
	top: 30%;
	display: block;	

}

header h1 {
	margin: 1% 0 auto 0;
}


header a {
	font-weight: 400;
}

nav a:hover {
	color: #00c1f6;

}

.tile a:hover {
	color: #ffffff;
}

.content{
	margin: 15vh 0 0 0;
	background-color: rgba(75,100,255,1);
	background: url(../images/carpet.jpeg) center;
	padding:20px 0 0 0;
}

.content a {
	text-decoration: none;
	/*color: rgba(75,150,255,1);*/
	color: rgba(0,100,150,1);
	font-weight: 500;
	line-height: 2.6;
}

.hide {
	display: none;
}

.hidden {
	display:none;
	float: center;

}

.show {
	min-width: 700px;
}

h1 {
	font-size: 65px;
	font-weight: 700;
	color: #000000;	
	text-transform: capitalize; 

}

h2 {
	font-size: 45px;
	font-weight: 700;
	color: #ffffff;	
	text-transform: capitalize; 


}

.strokeme
{
    color: white;
    text-shadow:
    -2px -2px 0 #000,
    2px -2px 0 #000,
    -2px 2px 0 #000,
    2px 2px 0 #000;  
}

h3 {
	font-size: 20px;
	font-weight: 500;
	color: #000000;	
	text-transform: capitalize; 

}

h4 {
	font-size: 28px;
	font-weight: 400;
	color: #ffffff;	
	text-transform: capitalize; 


}

.outline
{
    color: white;
    text-shadow:
    -1.5px -1.5px 0 #000,
    1.5px -1.5px 0 #000,
    -1.5px 1.5px 0 #000,
    1.5px 1.5px 0 #000;  
}

.container {
	min-width: 85%;
}

.three .tile{
	padding: 10% 0 0 0;
}

.tile {
	background-color: rgba(235,235,235,0.3);
	max-width: 100%;
	min-height: 75vh;
	border-style: double;
	border-width: 10px
}

.box {
	background-color: rgba(235,235,235,0.0);
	max-width: 100%;
	min-height: 25vh;
	border-style: double;
	border-width: 10px
}

.text p {
	max-width: 650px;
	margin: 25px auto 0 auto;

}

#gallery img {
  transition: all 0.25s ease;
  cursor: pointer;
  width: 100%;
  max-width: 400px;
  max-height: 400px;
  min-height: 400px;
  /*border: solid;*/
  border-style: solid;
  border-width: 5px;
  /*border-radius: 5%;*/
}

#gallery img:hover {
  box-shadow: 0px 5px 3px rgba(0, 0, 0, 0.25);
  transform: translatey(-5px);
}

#gallery .box {
	border: none;
	box-shadow: 0 0 15px rgba(0,0,0,0.4);
}

#lightbox {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	width: 100%;
	height: 100vh;
	z-index: 10;

/*rgba so we can adjust opacity - white at 50% opacity */

	background-color: rgba(150,150,150,0.5);
	


}

#lightbox img {
	/*perfect center*/

	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	max-width: 750px;
	max-height: 750px;
	min-width: 600px;
	min-height: 600px;
}

.outbox {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	width: 100%;
	height: 100vh;


/*rgba so we can adjust opacity - white at 50% opacity */

	background-color: rgba(150,150,150,0.5);
	display: none;
	z-index: 10;


}

.outbox img {
	/*perfect center*/

	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	max-width: 750px;
	min-width: 750px;
	max-height: 750px;
	min-height: 750px;
	box-shadow: 0 0 15px rgba(0,0,0,0.3)
}



form {
	max-width: 960px;
	margin: 0 auto 0 auto;
	min-height: 55vh;
	
}
input, textarea {
	width: 250px;
	padding: 10px 10px 10px 10px;
	margin: 10px 0 10px 0;
	border-radius: 10px;
	text-align: center;
}

input[type="submit"] {
	background-color: #ffffff;
	color: #000000;
	width: 150px;
}

iframe {
	box-shadow: 0 0 15px rgba(0,0,0,0.3);
}

@media screen and (max-width: 600px) {
	.gallery img {
		width: 100%;
		float: none;

	}
}

footer {
	min-height: 5vh;
}

@media screen and (max-width: 720px) {
	/* anything inside of here only takes effect when the screensize is less than 720 pixels */

	#lightbox img {
		max-width: 80%;
		max-height: 80%;
	}

	.outbox img {
		max-width: 50%;
		max-height: 50%;
	}

	img, iframe {
		max-width: 100%;
	}

	h1 {
		padding: 0 20px 0 20px;
	}

	header {
		height: 20vh
	}

	header h1 {
		font-size: 50px;
		top: 0%;
	}

	header .right {

	position: absolute;
	right: 5%;
	top: 20%;	
	
}

	nav a {
		/* want to stack each link, one ontoop of the other */
		/* inline works like text - sits next to each other on the same line, gets centred by text align center */

		/* display block - stacks one ontop of the other. wont be centered by text align ( can use margin: 0 auto; instead) */
		display: block;
		font-size: 15px;

	}
/* show the nav-trigger icon on mobile screens */
	.nav-trigger {
		/* set back to display block; make tag visible */
		display: block;
	}

	nav{
		display: none;
	}

	.content {
		margin: 20vh 0 0 0;
	}
	
}

